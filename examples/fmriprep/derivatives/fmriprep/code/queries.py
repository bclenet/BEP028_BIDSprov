#!/usr/bin/python
# coding: utf-8

""" Queries for nipype RDF provenance to BIDS-Prov provenance """

queries = {
    "1a. Extract output file entities": """
    CONSTRUCT {
        ?s rdfs:label ?label .
        ?s prov:atLocation ?atlocation .
        ?s prov:wasGeneratedBy ?act .
        ?s rdf:type ?type .
        }
    WHERE {
        ?s ?p ?o .
        ?s prov:qualifiedGeneration ?gen . # entity has a qualified generation
        ?gen prov:activity ?act . # this qualified generation has an activity
        # ?act nipype:command ?x . # this activity has a command (disables activities representing nipype interfaces)
        ?s prov:value ?label .
        ?s prov:atLocation ?atlocation .
        ?s rdf:type prov:Entity .
        ?s rdf:type ?type .
        ?s crypto:sha512 ?sha .
        BIND(STR(?label) as ?label)
        BIND(STR(?atlocation) as ?atlocation)
    }
    """,
    "1b. Extract input file entities": """
    CONSTRUCT {
        ?s rdfs:label ?label .
        ?s prov:atLocation ?atlocation .
        ?s rdf:type prov:Entity .
        ?s bidsprov:Digest ?sha .
        }
    WHERE {
        ?s ?p ?o .
        ?collection prov:hadMember ?s .
        ?collection rdf:type nipype:Inputs .
        ?s prov:value ?label .
        ?s prov:atLocation ?atlocation .
        ?s rdf:type prov:Entity .
        ?s crypto:sha512 ?sha .
        FILTER NOT EXISTS { ?s prov:wasGeneratedBy ?x . } # Entity was not generated by anything
        BIND(STR(?label) as ?label)
        BIND(STR(?atlocation) as ?atlocation)
        BIND(CONCAT("sha512:", STR(?sha)) as ?sha)
    }
    """,
    "2a. Extract activities with commands": """
    CONSTRUCT {
        ?s rdfs:label ?label .
        ?s rdf:type prov:Activity .
        ?s bidsprov:Command ?command . # we select activities with commands only
        ?s prov:wasAssociatedWith ?associated .
        # ?s prov:used ?used . # comment this line to remove prov:used environments
        ?s prov:used ?usedent .
        ?s prov:startedAtTime ?started .
        ?s prov:endedAtTime ?ended .
        }
    WHERE {
        ?s ?p ?o .
        ?s rdfs:label ?label .
        ?s rdf:type prov:Activity .
        ?s nipype:command ?command .
        ?s prov:wasAssociatedWith ?associated .
        ?s prov:used ?used .
        ?s prov:startedAtTime ?started .
        ?s prov:endedAtTime ?ended .
        ?s prov:qualifiedUsage ?qu .
        ?qu prov:entity ?usedent .
        ?usedent prov:atLocation ?x .
        BIND(STR(?label) as ?label)
        BIND(STR(?command) as ?command)
    }
    """,
    "2b. Extract activities with no commands": """
    CONSTRUCT {
        ?s rdfs:label ?label .
        ?s rdf:type prov:Activity .
        ?s prov:wasAssociatedWith ?associated .
        # ?s prov:used ?used . # comment this line to remove prov:used environments
        ?s prov:used ?usedent .
        ?s prov:startedAtTime ?started .
        ?s prov:endedAtTime ?ended .
        }
    WHERE {
        ?s ?p ?o .
        ?s rdfs:label ?label .
        ?s rdf:type prov:Activity .
        ?s prov:wasAssociatedWith ?associated .
        ?s prov:used ?used .
        ?s prov:startedAtTime ?started .
        ?s prov:endedAtTime ?ended .
        ?s prov:qualifiedUsage ?qu .
        ?qu prov:entity ?usedent .
        ?usedent prov:atLocation ?x .
        FILTER NOT EXISTS { ?s nipype:command ?command . } # Activity does not have any command
        BIND(STR(?label) as ?label)
    }
    """,
    "3. Extract agents": """
    CONSTRUCT {
        ?s rdfs:label ?label .
        ?s rdf:type prov:Agent .
        ?s bidsprov:Version ?version .
        }
    WHERE {
        ?s ?p ?o .
        ?s rdfs:label ?label .
        ?s rdf:type prov:SoftwareAgent .
        ?s nipype:version ?version .
        BIND(STR(?label) as ?label)
        BIND(STR(?version) as ?version)
    }
    """,
    "4. Extract environments": """
    CONSTRUCT {
        ?s rdfs:label ?label .
        ?s rdf:type bidsprov:Environment .
        ?s bidsprov:EnvVar ?envvar .
        ?envvar rdfs:label ?envvarkey .
        ?envvar prov:value ?envvarval .
        }
    WHERE {
        ?s ?p ?o .
        ?s rdfs:label ?label .
        ?s rdf:type nipype:Environment .
        ?envvar a prov:Entity .
        ?envvar nipype:environmentVariable ?envvarkey .
        ?envvar prov:value ?envvarval .
        ?s prov:hadMember ?envvar .
        BIND(STR(?label) as ?label)
        BIND(STR(?envvarkey) as ?envvarkey)
        BIND(STR(?envvarval) as ?envvarval)
    }
    """
}

simple_queries = {
    "1a. Extract output file entities": """
    CONSTRUCT {
        ?s rdfs:label ?label .
        ?s prov:atLocation ?atlocation .
        ?s prov:wasGeneratedBy ?act .
        ?s rdf:type prov:Entity .
        }
    WHERE {
        ?s ?p ?o .
        ?s prov:qualifiedGeneration ?gen . # entity has a qualified generation
        ?gen prov:activity ?act . # this qualified generation has an activity
        ?s prov:value ?label .
        ?s prov:atLocation ?atlocation .
        ?s rdf:type prov:Entity .
        ?s rdf:type ?type .
        BIND(STR(?label) as ?label)
        BIND(STR(?atlocation) as ?atlocation)
    }
    """,
    "1b. Extract input file entities": """
    CONSTRUCT {
        ?s rdfs:label ?label .
        ?s prov:atLocation ?atlocation .
        ?s rdf:type prov:Entity .
        }
    WHERE {
        ?s ?p ?o .
        ?collection prov:hadMember ?s .
        ?collection rdf:type nipype:Inputs .
        ?s prov:value ?label .
        ?s prov:atLocation ?atlocation .
        ?s rdf:type prov:Entity .
        FILTER NOT EXISTS { ?s prov:wasGeneratedBy ?x . } # Entity was not generated by anything
        BIND(STR(?label) as ?label)
        BIND(STR(?atlocation) as ?atlocation)
    }
    """,
    "2a. Extract activities with commands": """
    CONSTRUCT {
        ?s rdfs:label ?label .
        ?s rdf:type prov:Activity .
        ?s bidsprov:Command ?command . # we select activities with commands only
        ?s prov:used ?usedent .
        }
    WHERE {
        ?s ?p ?o .
        ?s rdfs:label ?label .
        ?s rdf:type prov:Activity .
        ?s nipype:command ?command .
        ?s prov:used ?used .
        ?s prov:qualifiedUsage ?qu .
        ?qu prov:entity ?usedent .
        ?usedent prov:atLocation ?x .
        BIND(STR(?label) as ?label)
        BIND(STR(?command) as ?command)
    }
    """,
    "2b. Extract activities with no commands": """
    CONSTRUCT {
        ?s rdfs:label ?label .
        ?s rdf:type prov:Activity .
        ?s prov:used ?usedent .
        }
    WHERE {
        ?s ?p ?o .
        ?s rdfs:label ?label .
        ?s rdf:type prov:Activity .
        ?s prov:used ?used .
        ?s prov:qualifiedUsage ?qu .
        ?qu prov:entity ?usedent .
        ?usedent prov:atLocation ?x .
        FILTER NOT EXISTS { ?s nipype:command ?command . } # Activity does not have any command
        BIND(STR(?label) as ?label)
    }
    """
}